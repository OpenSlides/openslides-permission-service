package permission

import (
	"github.com/OpenSlides/openslides-permission-service/internal/collection"
	"github.com/OpenSlides/openslides-permission-service/internal/dataprovider"
	"github.com/OpenSlides/openslides-permission-service/internal/perm"
)

func openSlidesCollections(dp dataprovider.DataProvider) []perm.Connecter {
	return []perm.Connecter{
		collection.NewAgendaItem(dp),
		collection.ListOfSpeaker(dp),

		collection.Assignment(dp),

		collection.Mediafile(dp),

		collection.NewMotion(dp),
		collection.Poll(dp),

		collection.NewPersonalNote(dp),
		collection.User(dp),

		collection.ReadPerm(dp, "assignment.can_see", "assignment", "assignment_candidate"),
		collection.ReadInMeeting(dp, "tag", "group"),
		collection.ReadPerm(dp, "agenda_item.can_see", "topic"),
		collection.ReadPerm(
			dp,
			"projector.can_see",
			"projector",
			"projection",
			"projectiondefault",
			"projector_message",
			"projector_countdown",
		),
		collection.ReadPerm(
			dp,
			"motion.can_see",
			"motion_workflow",
			"motion_category",
			"motion_state",
			"motion_statute_paragraph",
		),

		collection.WritePerm(dp, map[string]string{
			"agenda_item.assign":                       "agenda_item.can_manage",
			"agenda_item.create":                       "agenda_item.can_manage",
			"agenda_item.delete":                       "agenda_item.can_manage",
			"agenda_item.numbering":                    "agenda_item.can_manage",
			"agenda_item.sort":                         "agenda_item.can_manage",
			"agenda_item.update":                       "agenda_item.can_manage",
			"assignment.create":                        "assignment.can_manage",
			"assignment.delete":                        "assignment.can_manage",
			"assignment.update":                        "assignment.can_manage",
			"group.create":                             "user.can_manage",
			"group.delete":                             "user.can_manage",
			"group.set_permission":                     "user.can_manage",
			"group.update":                             "user.can_manage",
			"list_of_speakers.delete_all_speakers":     "list_of_speakers.can_manage",
			"list_of_speakers.re_add_last":             "list_of_speakers.can_manage",
			"list_of_speakers.update":                  "list_of_speakers.can_manage",
			"mediafile.create_directory":               "mediafile.can_manage",
			"mediafile.delete":                         "mediafile.can_manage",
			"mediafile.move":                           "mediafile.can_manage",
			"mediafile.update":                         "mediafile.can_manage",
			"mediafile.upload":                         "mediafile.can_manage",
			"meeting.delete_all_speakers_of_all_lists": "list_of_speakers.can_manage",
			"meeting.set_font":                         "meeting.can_manage_logos_and_fonts",
			"meeting.set_logo":                         "meeting.can_manage_logos_and_fonts",
			"meeting.unset_font":                       "meeting.can_manage_logos_and_fonts",
			"meeting.unset_logo":                       "meeting.can_manage_logos_and_fonts",
			"motion.follow_recommendation":             "motion.can_manage_metadata",
			"motion.reset_recommendation":              "motion.can_manage_metadata",
			"motion.reset_state":                       "motion.can_manage_metadata",
			"motion.set_recommendation":                "motion.can_manage_metadata",
			"motion.sort":                              "motion.can_manage_metadata",
			"motion_block.create":                      "motion.can_manage",
			"motion_block.delete":                      "motion.can_manage",
			"motion_block.update":                      "motion.can_manage",
			"motion_category.create":                   "motion.can_manage",
			"motion_category.delete":                   "motion.can_manage",
			"motion_category.number_motions":           "motion.can_manage",
			"motion_category.sort":                     "motion.can_manage",
			"motion_category.sort_motions_in_category": "motion.can_manage",
			"motion_category.update":                   "motion.can_manage",
			"motion_change_recommendation.create":      "motion.can_manage",
			"motion_change_recommendation.delete":      "motion.can_manage",
			"motion_change_recommendation.update":      "motion.can_manage",
			"motion_comment_section.create":            "motion.can_manage",
			"motion_comment_section.delete":            "motion.can_manage",
			"motion_comment_section.sort":              "motion.can_manage",
			"motion_comment_section.update":            "motion.can_manage",
			"motion_state.create":                      "motion.can_manage",
			"motion_state.delete":                      "motion.can_manage",
			"motion_state.update":                      "motion.can_manage",
			"motion_statute_paragraph.create":          "motion.can_manage",
			"motion_statute_paragraph.delete":          "motion.can_manage",
			"motion_statute_paragraph.sort":            "motion.can_manage",
			"motion_statute_paragraph.update":          "motion.can_manage",
			"motion_submitter.delete":                  "motion.can_manage",
			"motion_submitter.sort":                    "motion.can_manage",
			"motion_workflow.create":                   "motion.can_manage",
			"motion_workflow.delete":                   "motion.can_manage",
			"motion_workflow.update":                   "motion.can_manage",
			"speaker.end_speech":                       "list_of_speakers.can_manage",
			"speaker.sort":                             "list_of_speakers.can_manage",
			"speaker.speak":                            "list_of_speakers.can_manage",
			"speaker.update":                           "list_of_speakers.can_manage",
			"tag.create":                               "tag.can_manage",
			"tag.delete":                               "tag.can_manage",
			"tag.update":                               "tag.can_manage",
			"topic.create":                             "agenda_item.can_manage",
			"topic.delete":                             "agenda_item.can_manage",
			"topic.update":                             "agenda_item.can_manage",
			"user.create_temporary":                    "user.can_manage",
			"user.delete_temporary":                    "user.can_manage",
			"user.generate_new_password_temporary":     "user.can_manage",
			"user.reset_password_to_default_temporary": "user.can_manage",
			"user.update_temporary":                    "user.can_manage",
		}),
	}
}
